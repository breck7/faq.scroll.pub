nodeProduct
 outputFileName TreeComponentFramework.node.js
 combineTypeScriptFiles products/treeNotationTypes.ts treeComponentFramework/TreeComponentFramework.ts
 insertLastLine module.exports = { AbstractTreeComponent, WillowBrowser, AbstractGithubTriangleComponent, TreeComponentFrameworkDebuggerComponent }
nodeProduct
 outputFileName jtable.node.js
 insertFirstLine const { jtree } = require("../index.js")
 removeAll const { jtree } = require("../index.js")
 insertLastLine module.exports = {Table, TableParser, Column, Row, DummyDataSets, PrimitiveTypes }
 combineTypeScriptFiles products/treeNotationTypes.ts products/jTableTypes.ts jtable/Column.ts jtable/Row.ts jtable/TableParser.ts jtable/DummyDataSets.ts jtable/Table.ts
nodeProduct
 insertFirstLine const { Utils } = require("./Utils.js")
 outputFileName TreeNode.js
 insertLastLine module.exports = {TreeNode, ExtendibleTreeNode, AbstractExtendibleTreeNode, TreeEvents, TreeWord }
 combineTypeScriptFiles products/treeNotationTypes.ts core/AbstractNode.node.ts core/TreeNode.ts
nodeProduct
 insertFirstLine const { Utils } = require("./Utils.js");  const { TreeNode, TreeWord, ExtendibleTreeNode, AbstractExtendibleTreeNode } = require("./TreeNode");
 outputFileName GrammarLanguage.js
 insertLastLine module.exports = { GrammarConstants, PreludeCellTypeIds, HandGrammarProgram, GrammarBackedNode, UnknownNodeTypeError, UnknownGrammarProgram }
 combineTypeScriptFiles products/treeNotationTypes.ts core/GrammarLanguage.ts
nodeProduct
 insertFirstLine const { TreeNode } = require("./TreeNode.js"); const { Utils } = require("./Utils.js")
 outputFileName TestRacer.node.js
 insertLastLine module.exports = {TestRacer}
 combineTypeScriptFiles core/TestRacer.ts
nodeProduct
 outputFileName TreeNotationCodeMirrorMode.js
 insertLastLine module.exports = {TreeNotationCodeMirrorMode}
 combineTypeScriptFiles products/treeNotationTypes.ts core/TreeNotationCodeMirrorMode.ts
nodeProduct
 outputFileName GrammarCompiler.js
 insertLastLine module.exports = {GrammarCompiler}
 combineTypeScriptFiles products/treeNotationTypes.ts core/GrammarCompiler.ts
nodeProduct
 outputFileName Disk.node.js
 insertLastLine module.exports = {Disk}
 combineTypeScriptFiles disk/Disk.node.ts
nodeProduct
 outputFileName Utils.js
 insertLastLine module.exports = {Utils}
 combineTypeScriptFiles core/Utils.ts
nodeProduct
 outputFileName Kitchen.node.js
 combineTypeScriptFiles products/treeNotationTypes.ts kitchen/Kitchen.node.ts
 insertLastLine module.exports = {Kitchen}
nodeProduct
 outputFileName treeBase.node.js
 combineTypeScriptFiles products/treeNotationTypes.ts treeBase/TreeBase.ts
 insertLastLine module.exports = {TreeBaseFile, TreeBaseFolder, TreeBaseBuilder}
nodeProduct
 outputFileName treeBaseServer.node.js
 combineTypeScriptFiles treeBase/TreeBaseServer.ts
 insertLastLine module.exports = { TreeBaseServer, SearchServer}
nodeProduct
 outputFileName TypeScriptRewriter.js
 combineTypeScriptFiles typeScriptRewriter/TypeScriptRewriter.ts
 insertLastLine module.exports = {TypeScriptRewriter}
browserProduct
 outputFileName SweeperCraft.browser.js
 combineTypeScriptFiles treeComponentFramework/sweepercraft/SweeperCraft.ts
browserProduct
 outputFileName TreeComponentFramework.browser.js
 removeAll window.treeNotationTypes = treeNotationTypes
 combineTypeScriptFiles products/treeNotationTypes.ts treeComponentFramework/TreeComponentFramework.ts
browserProduct
 outputFileName jtree.browser.js
 removeAll Object.defineProperty(exports, "__esModule", { value: true })
 removeAll window.treeNotationTypes = treeNotationTypes
 combineTypeScriptFiles products/treeNotationTypes.ts core/Utils.ts core/TestRacer.ts core/AbstractNode.browser.ts core/TreeNode.ts core/GrammarLanguage.ts core/TreeNotationCodeMirrorMode.ts core/jtree.ts
browserProduct
 outputFileName core.test.browser.js
 removeAll window.treeNotationTypes = treeNotationTypes
 combineTypeScriptFiles products/treeNotationTypes.ts coreTests/core.test.ts
browserProduct
 outputFileName jtable.browser.js
 removeAll window.jTableTypes = jTableTypes
 removeAll window.treeNotationTypes = treeNotationTypes
 combineTypeScriptFiles products/treeNotationTypes.ts products/jTableTypes.ts jtable/Column.ts jtable/Row.ts jtable/TableParser.ts jtable/DummyDataSets.ts jtable/Table.ts
browserProduct
 outputFileName DesignerApp.browser.js
 combineTypeScriptFiles designer/DesignerApp.ts
browserProduct
 combineTypeScriptFiles sandbox/SandboxApp.ts
 outputFileName SandboxApp.browser.js