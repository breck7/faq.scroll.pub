anyCell
urlCell
 highlightScope constant.language
keywordCell
 highlightScope keyword
textCell
 highlightScope string
errorNode
 baseNodeType errorNode
idCell
 highlightScope string
scrolldownNode
 extensions scroll
 description A simple language for structurable thought. An extensible alternative to Markdown. Compiles to HTML.
 root
 inScope abstractScrollNode blankLineNode
 catchAllNodeType quickParagraphNode
 compilesTo html
 javascript
  get permalink() {
   return this.get("permalink") || this._permalink || ""
  }
  setPermalink(permalink) {
   this._permalink = permalink
   return this
  }
  get folder() {
   return this._folder || ""
  }
  setFolder(folder) {
   this._folder = folder
   return this
  }
  compileATags(text) {
   // todo: a better place for these util functions? I stick them in here so the
   // grammar is all in one file for ease of use in TreeLanguageDesigner
   const linkReplacer = (match, p1, p2, p3, offset, str) => {
    let suffix = ""
    if (p3.endsWith(",")) suffix = "," + suffix
    if (p3.endsWith(".")) suffix = "." + suffix
    p3 = p3.replace(/(,|\.)$/, "")
    let prefix = "https://"
    const isRelativeLink = p3.startsWith("./")
    if (isRelativeLink) {
     prefix = ""
     p3 = p3.substr(2)
    }
    if (p3.startsWith("https://") || p3.startsWith("http://")) prefix = ""
    return `${p1}<a href="${prefix}${p3}">${p2}</a>${suffix}`
   }
   return text.replace(/(^|\s)(\S+)ðŸ”—(\S+)(?=(\s|$))/g, linkReplacer)
  }
 example
  title Hello world
  section This is Scrolldown
  
  paragraph
   It compiles to HTML. Blank lines get turned into brs.
  
  code
   // You can add code as well.
   print("Hello world")
abstractScrollNode
 abstract
 cells keywordCell
blankCell
blankLineNode
 description Blank lines compile to nothing in the HTML.
 cells blankCell
 compiler
  stringTemplate 
 pattern ^$
 tags doNotSynthesize
quickParagraphNode
 description A catch all block. This may be removed in future versions.
 catchAllCellType textCell
 baseNodeType errorNode
 compiler
  stringTemplate <p class="scrollParagraphComponent">{textCell}</p>